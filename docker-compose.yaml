version: '3'

volumes:
  pgdatasource:

services:
  db:
    image: postgres
    container_name: db
    restart: always
    environment:
      POSTGRES_HOST: 127.0.0.1
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_PORT: 5432
      POSTGRES_DB: db
    ports:
      - '5432:5432'
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      start_period: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./pgdatasource:/var/lib/postgresql/data

  api:
    build: ./api
    container_name: api
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '8080:8080'
    networks:
      - app-network
    environment:
      DATABASE_HOST: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_PORT: 5432
      POSTGRES_DB: db
    volumes:
      - './api:/app'

  ui:
    build: ./ui
    container_name: ui
    environment:
      FAST_REFRESH: false
    depends_on:
      - api
    ports:
      - '3000:3000'
    networks:
      - app-network
    volumes:
      - './ui:/app'
networks:
  app-network:
    driver: bridge