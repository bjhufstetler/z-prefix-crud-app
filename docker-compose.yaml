version: '3'
services:
  ui:
    build: ./ui
    container_name: ui
    volumes:
      - './ui:/app'
    ports:
      - '3000:3000'
    networks:
      - app-network
    depends_on:
      - api
  api:
    build: ./api
    container_name: api
    volumes:
      - './api:/app'
    ports:
      - '8080:8080'
    networks:
      - app-network
    environment:
      DB_CONNECTION_STRING: postgres://postgres:password@db:5432/db
    depends_on:
      - db
  db:
    image: postgres
    container_name: db
    ports:
      - '5432:5432'
    volumes:
      - ./api/db/data:/var/lib/postgresql/data
    networks:
      - app-network
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      start_period: 5s
      timeout: 10s
      retries: 5
networks:
  app-network:
    driver: bridge